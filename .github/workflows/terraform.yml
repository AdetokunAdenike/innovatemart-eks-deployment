name: Terraform & EKS Deployment

on:
  push:
    branches:
      - main
      - 'feature/**'

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-west-1

    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -recursive

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan

  deploy:
    name: Deploy App to EKS
    runs-on: ubuntu-latest
    needs: terraform

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-west-1
      KUBECONFIG: ${{ github.workspace }}/kubeconfig

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: '1.32.0'

      - name: Install AWS CLI
        uses: aws-actions/configure-aws-cli@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Update Kubeconfig
        working-directory: terraform
        run: |
          aws eks update-kubeconfig \
            --name $(terraform output -raw eks_cluster_name) \
            --region eu-west-1 \
            --kubeconfig $KUBECONFIG

      - name: Deploy Retail Store App
        run: |
          kubectl apply -f k8s-manifests/
          kubectl rollout status deployment/nginx-deployment
